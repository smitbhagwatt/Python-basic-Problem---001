{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Vu2Z8btY-xZd"
      },
      "outputs": [],
      "source": [
        "#List Creation\n",
        "\n",
        "user_input = input(\"Enter the marks: \")\n",
        "marks = list(map(int, user_input.split()))\n",
        "\n",
        "#Using for loops\n",
        "print(\"All Marks: \")\n",
        "for mark in marks:\n",
        "    print(mark)\n",
        "\n",
        "#marks greater than 70:\n",
        "print(\"\\n Marks greater than 70: \")\n",
        "for mark in marks:\n",
        "    if mark > (70):\n",
        "      print(mark)\n",
        "\n",
        "#Calculate AVG\n",
        "avg = sum(marks) / len(marks)\n",
        "print(f\"\\nAverage marks: {avg:.2f}\")\n",
        "\n",
        "#New List of all passing marks(above 40)\n",
        "passing_marks = [mark for mark in marks if mark > 40]\n",
        "print(\"\\nPassing marks (above 40):\", passing_marks)\n",
        "\n",
        "#Sorting of List into descending order\n",
        "sorted_marks = sorted(marks, reverse=True)\n",
        "print(\"\\nSorted marks (descending):\", sorted_marks)\n",
        "\n",
        "#Marks Below 50 - Fail\n",
        "modified_marks = ['F' if mark < 50 else mark for mark in marks]\n",
        "print(\"\\nModified marks are (marks below 50 are failed): \", modified_marks)\n",
        "\n",
        "\n",
        "#highest and lowest marks\n",
        "print(\"\\nHighest mark: \", max(marks))\n",
        "print(\"\\nLowest mark: \", min(marks))\n",
        "\n",
        "#Remove duplicates from the list\n",
        "marks_with_dupes = [56, 78, 56, 100, 34, 78]\n",
        "unique_marks = list(set(marks_with_dupes))\n",
        "print(\"\\nMarks without duplication:\", unique_marks)"
      ]
    }
  ]
}
